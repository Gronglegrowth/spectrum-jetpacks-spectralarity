plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	mavenLocal()
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com" }
	maven {
		name = "Patchouli" // https://github.com/Vazkii/Patchouli
		url = 'https://maven.blamejared.com'
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name "entity reach attribute"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	maven { url 'https://maven.wispforest.io/' } // owo lib
	maven { url 'https://jitpack.io' }
	maven {
		name = "ProgrammerArtInjector"
		url = 'https://maven.extracraftx.com'
	}
	maven {
		name = "banner++"
		url "https://maven.theepicblock.nl"
	}
	maven {
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "Shimmer"
		url = 'https://maven.firstdarkdev.xyz/snapshots'
	}
	maven {
		name = "Curse"
		url = 'https://cfa2.cursemaven.com'
	}
	maven {
		url 'https://server.bbkr.space/artifactory/libs-release/'
	}
	mavenCentral()
	mavenLocal()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Spectrum
	modImplementation "com.github.DaFuqs:Revelationary:${project.revelationary_version}"
	modImplementation"com.github.DaFuqs:Arrowhead:${project.arrowhead_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"){
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "com.github.DaFuqs:AdditionalEntityAttributes:${project.additional_entity_attributes_version}"
	modImplementation "com.github.devs-immortal:Incubus-Core:${project.incubus_core_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-level:${project.cca_version}"
	modApi("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	modImplementation "maven.modrinth:spectrum:${project.spectrum_version}"
	modImplementation "io.github.fablabsmc:bannerpp:2.0.6-teb.1+mc.1.18.2"
	implementation "com.github.LlamaLad7:MixinExtras:0.0.12"
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.0.12")

	// Actual other dependencies
	modImplementation "maven.modrinth:trinkets:${project.trinkets_version}"

	// Dev Auth
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.0")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
